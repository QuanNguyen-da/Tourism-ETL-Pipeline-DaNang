# -*- coding: utf-8 -*-
"""Transferring Location Data By Using OpenCage

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FRmgJEKYM59Uqu9PM9_jAbhxDiZShYsz
"""

!pip install opencage

""" **Transferring Location Data**



"""

import pandas as pd

file_path = '/content/flickr_da_nang_photos_before_2007.csv'  # Make sure CSV file
data_flickr = pd.read_csv(file_path)

data_flickr_types = data_flickr.dtypes
print("Data Types")
print(data_flickr_types)

import pandas as pd
from opencage.geocoder import OpenCageGeocode
import time

#  API key
key = '158536def9c34862968b43cc878e8d89'
geocoder = OpenCageGeocode(key)

# Read file CSV
file_path = '/content/Flickr_3.xlsx'
data = pd.read_excel(file_path)

# Python function to get Latitude and Longitude
def get_address_components(lat, lon):
    result = geocoder.geocode(f"{lat}, {lon}")
    if result and len(result):
        components = result[0]['components']
        street = components.get('road', 'N/A')
        ward = components.get('quarter', 'N/A')
        district = components.get('suburb', 'N/A')
        city = components.get('city', 'N/A')
        country = components.get('country', 'N/A')
        return street, ward, district, city, country
    else:
        return 'N/A', 'N/A', 'N/A', 'N/A', 'N/A'

# Adding new columns
streets = []
wards = []
districts = []
cities = []
countries = []

# Looping through each row
for index, row in data.iterrows():
    lat = row['Latitude']
    lon = row['Longitude']
    street, ward, district, city, country = get_address_components(lat, lon)
    streets.append(street)
    wards.append(ward)
    districts.append(district)
    cities.append(city)
    countries.append(country)

    # Waiting
    time.sleep(1)

# Adding new columns
data['Street'] = streets
data['Ward'] = wards
data['District'] = districts
data['City'] = cities
data['Country'] = countries

# Saving
output_file_path = 'Flickr_da_nang.csv'
data.to_csv(output_file_path, index=False)

print("Đã lưu dữ liệu vào file:", output_file_path)

"""# **Transferring Booking and Agoda Location Data**

**Check the components of the address structure**
"""

from opencage.geocoder import OpenCageGeocode

# API key OpenCage
key = '51b4b2ccd1ec4fdc878f1440ba993ba3'
geocoder = OpenCageGeocode(key)

def get_ward_district(address):
    result = geocoder.geocode(address)
    if result and len(result):
        components = result[0]['components']
        print(components)  # In tất cả các thành phần để kiểm tra
        ward = components.get('suburb') or components.get('neighbourhood', 'N/A')
        district = components.get('state_district') or components.get('city_district', 'N/A')
        return ward, district
    else:
        return 'N/A', 'N/A'

# Example
address = "An  Thượng 1, Danang, Vietnam"
ward, district = get_ward_district(address)
print(f"Phường: {ward}, Quận: {district}")

"""**Getting Street, Ward and District**"""

from opencage.geocoder import OpenCageGeocode

key = '6ed468d6c8b748b9adb6d7348c56fd2b'
geocoder = OpenCageGeocode(key)

def get_address_components(address):
    result = geocoder.geocode(address)
    if result and len(result):
        components = result[0]['components']

        # Split
        address_parts = address.split(',')
        street_info = address_parts[0].strip().split(" ", 1)
        house_number = street_info[0]
        street_name = "Đường " + street_info[1] if len(street_info) > 1 else 'N/A'

        # Getting Ward and District
        ward = components.get('quarter', 'N/A').strip()
        district = components.get('suburb', 'N/A').strip()

        return house_number, street_name, ward, district
    else:
        return 'N/A', 'N/A', 'N/A', 'N/A'

# Example
address = "34 Le Van Hien ,  Danang, Vietnam"
house_number, street_name, ward, district = get_address_components(address)

data['Address_1'] = data['Address_1'].astype(str)

print(data['Address_1'].dtype)

import pandas as pd

# Read file Booking.com
file_path = r'/content/Booking.xlsx'
data = pd.read_excel(file_path)

# Checking Data Type
non_string_indices = data[~data['Address_1'].apply(lambda x: isinstance(x, str))].index

# Print Error
print("Các vị trí không phải chuỗi trong cột 'Address_1':", non_string_indices.tolist())

import pandas as pd

# Read file Booking.com
file_path = r'/content/Booking.xlsx'
data = pd.read_excel(file_path)

# Checking Data Type
non_string_indices = data[~data['Address_1'].apply(lambda x: isinstance(x, str))].index

# Print Error
print("Các vị trí không phải chuỗi trong cột 'Address_1':", non_string_indices.tolist())

#Removing Error
data_cleaned = data.drop(index=non_string_indices)

# Save
output_file_path = r'C:\Users\DELL\Phân tích dữ liệu bằng Python\Cleaned_Booking.xlsx'
data_cleaned.to_excel(output_file_path, index=False)

print("Đã xóa các dòng không phải chuỗi và lưu vào file mới thành công!")

data.dropna(subset=['Address_1'], inplace=True)

import pandas as pd
from opencage.geocoder import OpenCageGeocode

key = '51b4b2ccd1ec4fdc878f1440ba993ba3'
geocoder = OpenCageGeocode(key)

file_path = r'/content/Booking.xlsx'
data = pd.read_excel(file_path)

def get_address_components(address_1):
    result = geocoder.geocode(address_1)
    if result and len(result):
        components = result[0]['components']

        # Split
        address_parts = address_1.split(',')
        street_info = address_parts[0].strip().split(" ", 1)
        house_number = street_info[0]
        street_name = "Đường " + street_info[1] if len(street_info) > 1 else 'N/A'

        # Getting Ward and District
        ward = components.get('quarter', 'N/A').strip()
        district = components.get('suburb', 'N/A').strip()

        return house_number, street_name, ward, district
    else:
        return 'N/A', 'N/A', 'N/A', 'N/A'


address_components = data['Address_1'].apply(get_address_components)


data[['House_Number', 'Street_Name', 'Ward', 'District']] = pd.DataFrame(address_components.tolist(), index=data.index)


output_file_path = r'C:\Users\DELL\Phân tích dữ liệu bằng Python\Updated_Booking.xlsx'
data.to_excel(output_file_path, index=False)

print("OK")

"""**Transferring Flickr Location Data**"""

import pandas as pd
from opencage.geocoder import OpenCageGeocode


key = '51b4b2ccd1ec4fdc878f1440ba993ba3'
geocoder = OpenCageGeocode(key)

def get_address_components(lat, lon):
    # Creating from Lat and Lon
    address = f"{lat}, {lon}"
    result = geocoder.geocode(address)

    if result and len(result):
        components = result[0]['components']

        # Getting Ward and District
        ward = components.get('quarter', 'N/A').strip()
        district = components.get('suburb', 'N/A').strip()
        street = components.get('road', 'N/A').strip()
        city = components.get('city', 'N/A').strip()
        country = components.get('country', 'N/A').strip()
                return street, ward, district, city, country
    else:
        return 'N/A', 'N/A', 'N/A', 'N/A', 'N/A'

# Example
latitude = 16.062279
longitude = 108.237819

street, ward, district, city, country = get_address_components(latitude, longitude)

#Print
print(f"Tên đường: {street},\nPhường: {ward},\nQuận: {district},\nThành phố: {city},\nQuốc gia: {country}")

"""**Transferring**"""

import pandas as pd
from opencage.geocoder import OpenCageGeocode
import time

#Key
key = 'd2be5609a6854e0490cde8d574e6aa52'
geocoder = OpenCageGeocode(key)

#Read file
file_path = '/content/Transform.xlsx'
data = pd.read_excel(file_path)

# Function to get Lat and Lon
def get_address_components(lat, lon):
    result = geocoder.geocode(f"{lat}, {lon}")
    if result and len(result):
        components = result[0]['components']
        street = components.get('road', 'N/A')
        ward = components.get('quarter', 'N/A')
        district = components.get('suburb', 'N/A')
        city = components.get('city', 'N/A')
        country = components.get('country', 'N/A')
        return street, ward, district, city, country
    else:
        return 'N/A', 'N/A', 'N/A', 'N/A', 'N/A'


streets = []
wards = []
districts = []
cities = []
countries = []


for index, row in data.iterrows():
    lat = row['Latitude']
    lon = row['Longitude']
    street, ward, district, city, country = get_address_components(lat, lon)
    streets.append(street)
    wards.append(ward)
    districts.append(district)
    cities.append(city)
    countries.append(country)


    time.sleep(1)


data['Street'] = streets
data['Ward'] = wards
data['District'] = districts
data['City'] = cities
data['Country'] = countries


output_file_path = '/content/flickr_da_nang_with_address.csv'
data.to_csv(output_file_path, index=False)

print("Đã lưu dữ liệu vào file:", output_file_path)